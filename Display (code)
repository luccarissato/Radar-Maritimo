Base do Codigo do DISPLAY

1- É necessário o uso da biblioteca LiquidCrystal I2C

###CODIGO###

#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd1(0x26, 16, 2); 
LiquidCrystal_I2C lcd2(0x27, 16, 2); 

const char* string[] = {"", "Hora de navegar!", "Todos a bordo?", 
"Esconda navios", "na zona rival","Posicione o","barco de 3 casas",
"Toque uma casa", "amarela inicial!","Toque na segunda","casa amarela",
"Escolha o fim","do barco 3","barco de 2 casas","do barco 2","barco de 1 casa!",
"Selecione uma","casa amarela","Duas escolhas","te aguardam:","Clique no barco",
"e mude de lugar","ou aperte duas","vezes para jogar","Barco cancelado!","Vamos de novo",
"Hora de iniciar","a pontaria!","Sua vez de jogar","marujo!","Respire fundo...","vez do oponente",
"Sem sorte...","Agua!","Acertou o trecho","do navio inimigo","Bom tiro, marujo","acertou o barco!",
"Acertaram parte","do seu navio!","O inimigo achou","o seu barco!","Jogue de novo!","Boa jogada!",
"Essa casa ta","ocupada, marujo!","Bom jogo! Vamos","jogar de novo?","Vitoria, marujo!","Bom trabalho",
"Tente novamente:","Casa ocupada","Um clique de","cada vez marujo!"};

void setup() {
  lcd1.init();
  lcd1.backlight();
  
  lcd2.init();
  lcd2.backlight();
}

void Texto(LiquidCrystal_I2C &lcd, int a, int b, const char* texto1, int c, int d, const char* texto2) {
  lcd.setCursor(a, b);
  lcd.print(texto1);
  lcd.setCursor(c, d);
  lcd.print(texto2);
}

void loop() {
  Texto(lcd1, 0, 0, string[1], 1, 1, string[2]); 
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[3], 1, 1, string[4]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 2, 0, string[5], 0, 1, string[6]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[7], 0, 1, string[8]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[9], 2, 1, string[10]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[11], 3, 1, string[12]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 2, 0, string[5], 0, 1, string[13]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[7], 0, 1, string[8]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[11], 3, 1, string[14]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 2, 0, string[5], 0, 1, string[15]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[16], 2, 1, string[17]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[18], 2, 1, string[19]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[20], 0, 1, string[21]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[22], 0, 1, string[23]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[24], 1, 1, string[25]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[26], 2, 1, string[27]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[28], 4, 1, string[29]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[30], 0, 1, string[31]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 2, 0, string[32], 5, 1, string[33]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[34], 0, 1, string[35]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[36], 0, 1, string[37]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[38], 1, 1, string[39]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 0, 0, string[40], 2, 1, string[41]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 1, 0, string[42], 2, 1, string[43]);
  delay(2000);
  lcd1.clear()
  Texto(lcd1, 2, 0, string[44], 0, 1, string[45]);
  delay(2000);
  lcd1.clear()
  Texto(lcd1, 0, 0, string[46], 0, 1, string[47]);
  delay(2000);
  lcd1.clear()
  Texto(lcd1, 0, 0, string[48], 2, 1, string[49]);
  delay(2000);
  lcd1.clear()
  Texto(lcd1, 0, 0, string[50], 2, 1, string[51]);
  delay(2000);
  lcd1.clear();
  Texto(lcd1, 2, 0, string[52], 0, 1, string[53]);
  delay(2000);
  lcd1.clear();
}
